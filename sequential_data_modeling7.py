# -*- coding: utf-8 -*-
"""Untitled1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zMlWS2WLQxorvXKwduZHAWGn7NqqQiJB
"""

import numpy as np

def ReLU(x):
  return np.maximum(0, x)

def softmax(x):
  exp_x = np.exp(x)
  sum = np.sum(exp_x)
  result = exp_x / sum
  return result

def predict(input, W1, W2):
  ht = np.dot(W1, input)
  fht  = ReLU(ht)
  s = np.dot(W2, fht)
  y = softmax(s)
  return y, fht[0], fht[1]



#Q1
b1 = 2
b2 = 4
b3 = 9

w11 = (b2 + 1)/10
w12 = -3/10
w13 = (b1 + 1)/10
w14 = -5/10
w15 = -b2/10
w16 = 7/10
w1a = (b3 + 1)/10
w1b = -9/10
w1c = -(b3 + 1)/10
w1d = 4/10
w21 = -(b1 + 1)/10
w22 = -6/10
w23 = -(b2 + 1)/10
w24 = -8/10
w25 = b1/10
w26 = 2/10

W1 = np.array([[w11, w13, w15, w1a, w1c], [w12, w14, w16, w1b, w1d]])
W2 = np.array ([[w21, w24], [w22, w25], [w23, w26]])
print("W1\n", W1)
print("W2\n", W2)

recurrent_h1 = 0.0
recurrent_h2 = 0.0

#Q2
input = np.array([[1], [0], [0], [recurrent_h1], [recurrent_h2]])
result, recurrent_h1, recurrent_h2 = predict(input, W1, W2)
print("Q2\n", result)

#Q3
input = np.array([[0], [1], [0], recurrent_h1, recurrent_h2])
result, recurrent_h1, recurrent_h2 = predict(input, W1, W2)
print("Q3\n", result)

#Q4
input = np.array([[0], [0], [1], recurrent_h1, recurrent_h2])
result, recurrent_h1, recurrent_h2 = predict(input, W1, W2)
print("Q4\n", result)